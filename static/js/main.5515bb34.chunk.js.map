{"version":3,"sources":["fbase.js","routes/Profile.js","components/AuthForm.js","routes/Auth.js","components/Nweet.js","components/NweetFactory.js","routes/Home.js","components/Navigation.js","components/Router.js","components/App.js","index.js"],"names":["firebase","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","firebaseInstance","authService","dbService","storageService","refreshUser","userObj","history","useHistory","useState","displayName","newDisplayName","setNewDisplayName","onSubmit","event","a","preventDefault","uid","updateProfile","getMyNweets","collection","where","orderBy","get","nweets","console","log","docs","map","doc","data","useEffect","className","type","placeholder","onChange","value","target","autoFocus","style","marginTop","onClick","signOut","push","AuthForm","email","setEmail","password","setPassword","newAccount","setNewAccount","error","setError","name","createUserWithEmailAndPassword","signInWithEmailAndPassword","message","required","prev","Auth","onSocialClick","provider","auth","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","icon","faTwitter","color","size","marginBottom","faGoogle","faGithub","Nweet","nweetObj","isOwner","editing","setEditing","text","newNweet","setNewNweet","onDeleteClick","ok","window","confirm","id","delete","refFromURL","attachmentUrl","toggleEditing","update","src","class","faTrash","faPencilAlt","NweetFactory","nweet","setNweet","attachment","setAttachment","attachmentRef","ref","child","uuidv4","putString","response","getDownloadURL","createdAt","Date","now","creatorId","add","maxLength","for","faPlus","accept","theFile","files","reader","FileReader","onloadend","finishedEvent","result","currentTarget","readAsDataURL","backgroundImage","faTimes","Home","setNweets","onSnapshot","snapshot","nweetArray","key","Navigation","display","justifyContent","to","marginRight","marginLeft","flexDirection","alignItems","fontSize","faUser","AppRouter","isLoggedIn","maxWidth","width","margin","exact","path","Profile","App","init","setInit","setUserObj","onAuthStateChanged","user","args","currentUser","Boolean","getFullYear","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5515bb34.chunk.js","sourcesContent":["import * as firebase from 'firebase/app';\r\nimport \"firebase/auth\";\r\nimport \"firebase/firestore\";\r\nimport \"firebase/storage\";\r\nconst firebaseConfig = {\r\n    apiKey: process.env.REACT_APP_API_KEY,\r\n    authDomain: process.env.REACT_APP_AUTH_DOMAIN,\r\n    databaseURL: process.env.REACT_APP_DATABASE_URL,\r\n    projectId: process.env.REACT_APP_PROJECT_ID,\r\n    storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\r\n    messagingSenderId: process.env.REACT_APP_MESSAGIN_ID,\r\n    appId: process.env.REACT_APP_APP_ID\r\n  };\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport const firebaseInstance = firebase;\r\n\r\nexport const authService = firebase.auth();\r\nexport const dbService = firebase.firestore();\r\nexport const storageService = firebase.storage();","import { authService, dbService } from \"fbase\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nexport default({ refreshUser,userObj }) => {\r\n\r\n    const history = useHistory(); //얘는 뭐징\r\n    const [newDisplayName, setNewDisplayName] = useState(userObj.displayName);\r\n\r\n\r\n    const onLogoutClick = () => {\r\n        authService.signOut();\r\n        history.push(\"/\");\r\n    };\r\n    const onChange = (event) => {\r\n        const {\r\n            target : {value}\r\n        } = event;\r\n        setNewDisplayName(value);\r\n    };\r\n    const onSubmit = async(event) => {\r\n        event.preventDefault();\r\n        if(userObj.uid !== newDisplayName){\r\n            await userObj.updateProfile({\r\n                displayName: newDisplayName,\r\n                //photoURL: \"https://example.com/jane-q-user/profile.jpg\"\r\n              });\r\n            refreshUser();\r\n        }\r\n    };\r\n    const getMyNweets = async() => {\r\n        const nweets = await dbService\r\n            .collection(\"nweets\")\r\n            .where(\"creatorId\",\"==\",userObj.uid)\r\n            .orderBy(\"createdAt\")\r\n            .get();\r\n        console.log(nweets.docs.map((doc) => doc.data()));\r\n    };\r\n    useEffect( () => {\r\n        getMyNweets();\r\n    }, [])\r\n\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <form onSubmit={onSubmit} className=\"profileForm\" >\r\n                <input\r\n                 type=\"text\"\r\n                 placeholder=\"Display name\" \r\n                 onChange={onChange}\r\n                 value={newDisplayName}\r\n                 autoFocus\r\n                 className=\"formInput\"\r\n                />\r\n                <input\r\n                 type=\"submit\" \r\n                 value=\"Update Profile\" \r\n                 className=\"formBtn\"\r\n                 style={{\r\n                     marginTop: 10,\r\n                 }}\r\n                />\r\n            </form>\r\n            <span className=\"formBtn cancelBtn logOut\" onClick={onLogoutClick}>\r\n                Log out\r\n            </span>\r\n        </div>\r\n    );\r\n};\r\n","import { authService } from \"fbase\";\r\nimport React, { useState } from \"react\";\r\n\r\nconst AuthForm = () => {\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [newAccount, setNewAccount] = useState(true);\r\n    const [error, setError] = useState(\"\");\r\n\r\n    const onChange = (event) => {\r\n        const{\r\n            target: {name, value},\r\n        } = event;\r\n        if(name === \"email\"){\r\n            setEmail(value);\r\n        } else if (name === \"password\"){\r\n            setPassword(value);\r\n        }\r\n    }\r\n    const onSubmit= async (event) => {\r\n        event.preventDefault();\r\n        try{\r\n            let data;\r\n            if(newAccount){\r\n             data = await authService.createUserWithEmailAndPassword(\r\n                    email,password\r\n                )\r\n            } else {\r\n             data = await authService.signInWithEmailAndPassword(\r\n                    email,password\r\n                )\r\n            }\r\n        } catch(error){\r\n            setError(error.message);\r\n        }\r\n    };\r\n    const toggleAccount = () => setNewAccount((prev)=> !prev);\r\n\r\n    return (\r\n    <>\r\n        <form onSubmit={onSubmit} className=\"container\">\r\n            <input\r\n             name=\"email\"\r\n             type=\"email\"\r\n             placeholder=\"Email\"\r\n             required value={email}\r\n             onChange={onChange}\r\n             className=\"authInput\"\r\n            />\r\n            <input\r\n             name=\"password\"\r\n             type=\"password\"\r\n             placeholder=\"Password\"\r\n             required value={password}\r\n             onChange={onChange}\r\n             className=\"authInput\"\r\n            />\r\n            <input\r\n             type=\"submit\"\r\n             value={newAccount ? \"Create Account\" : \"Log In\"}\r\n             className=\"authInput authSubmit\"\r\n            />\r\n            {error && <span className=\"authError\">{error}</span>}\r\n        </form>\r\n        <span onClick={toggleAccount} className=\"authSwitch\">\r\n            {newAccount ? \"Sign in\" : \"Create Account\"}\r\n        </span>\r\n    </>\r\n    );\r\n}\r\n\r\nexport default AuthForm;","import React, { useState} from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n    faTwitter,\r\n    faGoogle,\r\n    faGithub,\r\n} from \"@fortawesome/free-brands-svg-icons\";\r\nimport { authService,firebaseInstance } from \"../fbase\";\r\nimport AuthForm from \"components/AuthForm\";\r\nconst Auth=() => {\r\n    \r\n    const onSocialClick  = async (event) => {\r\n        const {\r\n            target:{name},\r\n        } = event;\r\n        let provider;\r\n        if(name === \"google\"){\r\n            provider = new firebaseInstance.auth.GoogleAuthProvider();\r\n        } else if(name===\"github\"){\r\n            provider = new firebaseInstance.auth.GithubAuthProvider();\r\n        }\r\n        const data = await authService.signInWithPopup(provider);\r\n    } \r\n    return(\r\n        <div className=\"authContainer\">\r\n        <FontAwesomeIcon\r\n            icon={faTwitter}\r\n            color={\"#04AAFF\"}\r\n            size=\"3x\"\r\n            style={{ marginBottom: 30 }}\r\n        />\r\n            <AuthForm />\r\n            <div className=\"authBtns\">\r\n                <button onClick={onSocialClick} name=\"google\" className=\"authBtn\">\r\n                    Continue with Google <FontAwesomeIcon icon={faGoogle} />\r\n                </button>\r\n                <button onClick={onSocialClick} name=\"github\" className=\"authBtn\">\r\n                    Continue with Github <FontAwesomeIcon icon={faGithub} />\r\n                </button>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Auth;","import { dbService, storageService } from \"fbase\";\r\nimport React, { useState } from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTrash, faPencilAlt } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Nweet = ({ nweetObj, isOwner }) => {\r\n    const [editing,setEditing] = useState(false);\r\n    const [newNweet, setNewNweet] = useState(nweetObj.text);\r\n    const onDeleteClick = async () => {\r\n        const ok = window.confirm(\"Are you sure you want to delete this nweet?\");\r\n        console.log(ok);\r\n        if(ok){\r\n            // doc 파라미터가 왜 \"가 아닌 `를 쓰는지? $는 뭔지?\r\n            await dbService.doc(`nweets/${nweetObj.id}`).delete();\r\n            await storageService.refFromURL(nweetObj.attachmentUrl).delete();\r\n        }\r\n    }\r\n    const toggleEditing = () => setEditing(prev => !prev);\r\n    const onSubmit = async (event) => {\r\n        event.preventDefault();\r\n        \r\n        await dbService.doc(`nweets/${nweetObj.id}`).update({\r\n            text: newNweet\r\n        });\r\n        setEditing(false);\r\n    }\r\n    const onChange = (event) => {\r\n        const {\r\n            target: {value},\r\n        } = event;\r\n        setNewNweet(value);\r\n    }\r\n    return (\r\n    <div className=\"nweet\">\r\n        {editing ? (\r\n            <>\r\n                {isOwner && (\r\n                <>\r\n                    <form onSubmit={onSubmit} className=\"container nweetEdit\">\r\n                        <input \r\n                            type=\"text\" \r\n                            placeholder=\"Edit your nweet\" \r\n                            value={newNweet} \r\n                            onChange={onChange}\r\n                            required\r\n                            autoFocus\r\n                            className=\"formInput\"\r\n                        />\r\n                        <input type=\"submit\" value=\"Update Nweet\" className=\"formBtn\" />\r\n                    </form>\r\n                    <span onClick={toggleEditing} className=\"formBtn cancelBtn\">\r\n                        Cancel\r\n                    </span>\r\n                </>\r\n                )}\r\n            </>\r\n                ) : (\r\n            <>\r\n                <h4>{nweetObj.text}</h4>\r\n                {nweetObj.attachmentUrl && <img src={nweetObj.attachmentUrl} />}\r\n\r\n                {isOwner && (\r\n                    <div class=\"nweet__actions\">\r\n                        <span onClick={onDeleteClick}>\r\n                            <FontAwesomeIcon icon={faTrash} />\r\n                        </span>\r\n                        <span onClick={toggleEditing}>\r\n                            <FontAwesomeIcon icon={faPencilAlt} />\r\n                        </span>\r\n                    </div>\r\n                )}\r\n            </>\r\n                )\r\n        }\r\n    </div>\r\n)};\r\n\r\nexport default Nweet;","import { dbService, storageService } from \"fbase\";\r\nimport {v4 as uuidv4 } from \"uuid\";\r\nimport React, { useState } from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faPlus, faTimes } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst NweetFactory = ({ userObj }) => {\r\n    const [nweet, setNweet] = useState(\"\");\r\n    const [attachment,setAttachment] = useState(\"\");\r\n\r\n    const onSubmit = async (event) => {\r\n        if(nweet === \"\"){\r\n            return;\r\n        }\r\n        event.preventDefault();\r\n        let attachmentUrl = \"\";\r\n        if(attachment !== \"\"){\r\n            const attachmentRef = storageService.ref().child(`${userObj.uid}/${uuidv4()}`);\r\n            const response = await attachmentRef.putString(attachment, \"data_url\");\r\n            attachmentUrl = await response.ref.getDownloadURL();\r\n        }\r\n        \r\n        const nweetObj = {\r\n            text: nweet,\r\n            createdAt: Date.now(),\r\n            creatorId: userObj.uid,\r\n            attachmentUrl\r\n        }\r\n        await dbService.collection(\"nweets\").add(nweetObj);\r\n        setNweet(\"\");\r\n        setAttachment(\"\");\r\n    };\r\n    const onChange = (event) => {\r\n        const { \r\n            target: {value}, //event 안에있는 target 키에 대응하는 value값을 \"vaule\"변수에 저장\r\n        } = event;\r\n        setNweet(value);\r\n    };\r\n\r\n    const onFileChange = (event) => {\r\n        const {\r\n            target: {files},\r\n        } = event;\r\n        const theFile = files[0];\r\n        const reader = new FileReader();\r\n        reader.onloadend = (finishedEvent) => {\r\n            const {\r\n                currentTarget: {result},\r\n            } = finishedEvent;\r\n            setAttachment(result);\r\n        }\r\n        reader.readAsDataURL(theFile);\r\n    };\r\n    const onClearAttachment = () => setAttachment(\"\");\r\n\r\n    return (\r\n     <form onSubmit={onSubmit} className=\"factoryForm\">\r\n        <div className=\"factoryInput__container\">\r\n            <input\r\n             className=\"factoryInput__Input\"\r\n             value={nweet}\r\n             onChange={onChange}\r\n             type=\"text\"\r\n             placeholder = \"what's on your mind?\"\r\n             maxLength={120}\r\n            />\r\n            <input type=\"submit\" value = \"&rarr;\" className=\"factoryInput__arrow\" />\r\n        </div>\r\n        \r\n        <label for=\"attach-file\" className=\"factoryInput__label\">\r\n            <span>Add photos</span>\r\n            <FontAwesomeIcon icon={faPlus} />\r\n        </label>\r\n        <input\r\n         type=\"file\"\r\n         accept=\"image/*\"\r\n         onChange={onFileChange}\r\n        />\r\n        \r\n        {attachment && (\r\n            <div className=\"factoryForm__attachment\">\r\n                <img\r\n                 src={attachment}\r\n                 style={{\r\n                     backgroundImage: attachment,\r\n                 }}\r\n                />\r\n                <div className=\"factoryForm__clear\" onClick={onClearAttachment}>\r\n                    <span>Remove</span>\r\n                    <FontAwesomeIcon icon={faTimes} />\r\n                </div>\r\n            </div>\r\n        )}\r\n     </form>\r\n    );\r\n}\r\n\r\nexport default NweetFactory;","import Nweet from \"components/Nweet\";\r\nimport NweetFactory from \"components/NweetFactory\";\r\nimport { dbService, storageService } from \"fbase\";\r\nimport React, { useEffect, useState } from \"react\";\r\n\r\n\r\nconst Home=({ userObj }) => {\r\n\r\n    const [nweets, setNweets] = useState([]);\r\n\r\n    useEffect(() => {\r\n        dbService.collection(\"nweets\")\r\n            .orderBy(\"createdAt\",\"desc\")\r\n            .onSnapshot((snapshot)=>{\r\n                const nweetArray = snapshot.docs.map((doc) => ({\r\n                    id: doc.id,\r\n                    ...doc.data(),\r\n                }));\r\n            setNweets(nweetArray);\r\n        });\r\n    }, [])\r\n    \r\n    return (\r\n        <div className=\"container\">\r\n            <NweetFactory userObj={userObj} />\r\n            <div style={{ marginTop: 30 }}>\r\n                {nweets.map(nweet => (\r\n                <Nweet key={nweet.id} nweetObj={nweet} isOwner={nweet.creatorId === userObj.uid} />\r\n                ))}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Home;","import React from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTwitter } from \"@fortawesome/free-brands-svg-icons\";\r\nimport { faUser } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Navigation = ({userObj}) => (\r\n <nav>\r\n    <ul style={{ display: \"flex\", justifyContent: \"center\", marginTop: 50 }}>\r\n        <li>\r\n            <Link to=\"/\" style={{ marginRight: 10}}>\r\n                <FontAwesomeIcon icon={faTwitter} color={\"#04AAFF\"} size=\"2x\" />\r\n            </Link>\r\n        </li>\r\n        <li>\r\n            <Link\r\n            to=\"/profile\"\r\n            style={{\r\n                marginLeft: 10,\r\n                display: \"flex\",\r\n                flexDirection: \"column\",\r\n                alignItems: \"center\",\r\n                fontSize: 12,\r\n            }}\r\n            >\r\n                <FontAwesomeIcon icon={faUser} color={\"#04AAFF\"} size=\"2x\" />\r\n                <span style={{ marginTop: 10 }}>\r\n                    {userObj.displayName\r\n                    ? `${userObj.displayName}의 Profile`\r\n                    : \"Profile\"}\r\n                </span>\r\n            </Link>\r\n        </li>\r\n    </ul>\r\n </nav>\r\n);\r\nexport default Navigation;","import React, { useState } from \"react\";\r\nimport {HashRouter as Router, Route, Switch} from \"react-router-dom\";\r\nimport Profile from \"routes/Profile\";\r\nimport Auth from \"../routes/Auth\";\r\nimport Home from \"../routes/Home\";\r\nimport Navigation from \"./Navigation\";\r\n\r\nconst AppRouter = ({ refreshUser,isLoggedIn,userObj }) => {\r\n    return (\r\n        <Router>\r\n            {isLoggedIn && <Navigation userObj={userObj} />}\r\n            <Switch>\r\n                {isLoggedIn ? (\r\n                    <div\r\n                        style={{\r\n                            maxWidth: 890,\r\n                            width: \"100%\",\r\n                            margin: \"0 auto\",\r\n                            marginTop: 80,\r\n                            display: \"flex\",\r\n                            justifyContent: \"center\",\r\n                        }}\r\n                    >\r\n                    <Route exact path=\"/\">\r\n                        <Home userObj={userObj}/>    \r\n                    </Route> \r\n                    <Route exact path=\"/profile\">\r\n                        <Profile userObj={userObj} refreshUser={refreshUser}/>    \r\n                    </Route>\r\n                    </div>\r\n            ) : (\r\n                <Route exact path=\"/\">\r\n                 <Auth />\r\n                </Route>\r\n            )}\r\n            </Switch>\r\n        </Router>\r\n    );\r\n};\r\nexport default AppRouter;","import React, { useEffect, useState } from 'react';\nimport AppRouter from \"./Router\";\nimport {authService} from \"../fbase\";\n\nfunction App() {\n  const[init, setInit] = useState(false)\n  const [userObj, setUserObj] = useState(null);\n\n  useEffect(() =>{\n    authService.onAuthStateChanged((user) =>{\n      if(user){\n        setUserObj({\n          displayName : user.displayName,\n          uid:user.uid,\n          updateProfile: (args) => user.updateProfile(args),\n        });  \n      }else {\n        setUserObj(null);\n      }\n      setInit(true);\n    });\n  }, []);\n\n  const refreshUser = () => {\n    const user = authService.currentUser;\n    setUserObj({\n      displayName : user.displayName,\n      uid:user.uid,\n      updateProfile: (args) => user.updateProfile(args),\n    });\n  }\n\n  return (\n    <>\n      {init ? <AppRouter refreshUser={refreshUser} isLoggedIn={Boolean(userObj)} userObj={userObj} /> : \"Initializing...\"}\n      <footer className=\"container\">&copy; {new Date().getFullYear()} Nwitter</footer>\n    </>\n    );\n  \n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport \"./style.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}